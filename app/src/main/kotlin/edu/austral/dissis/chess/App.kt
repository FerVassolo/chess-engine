/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package edu.austral.dissis.chess

import chess.factories.BoardTypeCreator
import commons.board.Board
import commons.game.Color
import commons.game.Game
import commons.game.Player
import commons.rules.endgameRules.EndGameRule
import commons.rules.endgameRules.RunOutOfPieces
import commons.rules.restrictionRules.CannotCaptureSameColorRestriction
import commons.rules.restrictionRules.OutOfBoundsRestriction
import edu.austral.dissis.chess.gui.*
import javafx.application.Application
import javafx.application.Application.launch
import javafx.scene.Scene
import javafx.stage.Stage
import java.sql.Time


fun main() {
    launch(ChessGameApplication::class.java)
}

class ChessGameApplication : Application() {
    private val gameEngine = GameAdapter(createNormalCheckersGame())
    private val imageResolver = CachedImageResolver(DefaultImageResolver())

    companion object {
        const val GameTitle = "Chess"
    }

    override fun start(primaryStage: Stage) {
        primaryStage.title = GameTitle

        val root = createGameViewFrom(gameEngine, imageResolver)
        primaryStage.scene = Scene(root)

        primaryStage.show()
    }
}
